<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

       Copyright 2009-2019 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.apache.ibatis.submitted.not_null_column.FatherMapper">

    <resultMap id="ChildMap" type="Child">
        <result property="id" column="child_id"/>
        <result property="name" column="child_name"/>
    </resultMap>

    <resultMap id="FatherMapNoFid" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="children" ofType="Child" notNullColumn="child_id">
	        <result property="id" column="child_id"/>
	        <result property="name" column="child_name"/>
        </collection>
    </resultMap>

    <select id="selectByIdNoFid" resultMap="FatherMapNoFid" parameterType="int">
    	SELECT id, name, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="FatherMapFid" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="children" ofType="Child" notNullColumn="child_id">
	        <id property="id" column="child_id"/>
            <result property="fatherId" column="id"/>
	        <result property="name" column="child_name"/>
        </collection>
    </resultMap>

    <select id="selectByIdFid" resultMap="FatherMapFid" parameterType="int">
    	SELECT id, name, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="FatherMapWithInternalResultMap" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="tempDateField" column="current"/>
        <collection property="children" ofType="Child" notNullColumn="child_id">
	        <result property="id" column="child_id"/>
	        <result property="name" column="child_name"/>
	        <result property="tempDateField" column="current"/>
        </collection>
    </resultMap>

    <select id="selectByIdWithInternalResultMap" resultMap="FatherMapWithInternalResultMap" parameterType="int">
    	SELECT id, name, sysdate as current, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="ChildMapWithRefResultMap" type="Child">
        <result property="id" column="child_id"/>
        <result property="name" column="child_name"/>
        <result property="tempDateField" column="current"/>
    </resultMap>
    <resultMap id="FatherMapWithRefResultMap" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="tempDateField" column="current"/>
        <collection property="children" ofType="Child" notNullColumn="child_id" resultMap="ChildMapWithRefResultMap"/>
    </resultMap>

    <select id="selectByIdWithRefResultMap" resultMap="FatherMapWithRefResultMap" parameterType="int">
    	SELECT id, name, sysdate as current, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="FatherMapFidMultipleNullColumns" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="children" ofType="Child" notNullColumn="child_id, child_name">
	        <id property="id" column="child_id"/>
            <result property="fatherId" column="id"/>
	        <result property="name" column="child_name"/>
        </collection>
    </resultMap>

    <select id="selectByIdFidMultipleNullColumns" resultMap="FatherMapFidMultipleNullColumns" parameterType="int">
    	SELECT id, name, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="FatherMapFidMultipleNullColumnsAndBrackets" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="children" ofType="Child" notNullColumn="{child_id, child_name}">
	        <id property="id" column="child_id"/>
            <result property="fatherId" column="id"/>
	        <result property="name" column="child_name"/>
        </collection>
    </resultMap>

    <select id="selectByIdFidMultipleNullColumnsAndBrackets" resultMap="FatherMapFidMultipleNullColumnsAndBrackets" parameterType="int">
    	SELECT id, name, Child.id AS child_id, Child.name AS child_name
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

    <resultMap id="FatherMapFidWorkaround" type="Father">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="children" ofType="Child">
	        <result property="id" column="child_id"/>
            <result property="fatherId" column="child_father_id"/>
	        <result property="name" column="child_name"/>
        </collection>
    </resultMap>

    <select id="selectByIdFidWorkaround" resultMap="FatherMapFidWorkaround" parameterType="int">
    	SELECT id, name, Child.id AS child_id, Child.name AS child_name, Child.father_id AS child_father_id
    	FROM Father
    	LEFT JOIN Child ON Father.id = Child.father_id
    	WHERE id = #{id}
    </select>

</mapper>
